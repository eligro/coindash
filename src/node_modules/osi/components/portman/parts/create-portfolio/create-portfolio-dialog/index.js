import React, { Component } from 'react'
import Button from 'react-md/lib/Buttons/Button'
import Dialog from 'material-ui/Dialog'
import TextField from 'material-ui/TextField'
import { recordEvent } from 'osi/analytics'

const RaisedButton = (props) => <Button raised {...props}>{props.children}</Button>

class CreatePortfolioDialog extends Component {
  constructor (props) {
    super(props)

    this.state = {
      allowSubmit: false
    }
  }

  onSubmit (e) {
    let start = Date.now()
    const { uid } = this.props.user.profile
    const name = this.refs.name.getValue()
    const description = this.refs.description.getValue()

    const { onCreate = () => {} } = this.props
    e.preventDefault()

    this.props.portfolioActions.newPortfolio({name, description, uid})
      .then(pmResult => {
        onCreate(pmResult)
      })
      .then(_ => {
        let end = Date.now()
        let duration = end - start
        const portfolioEvent = {
          name: name,
          description: description,
          uid: uid,
          duration: duration,
          keen: {
            timestamp: new Date().toISOString()
          }
        }
        recordEvent('create portfolio', portfolioEvent, function(err, res){
          if (err) {
            console.log('Portolio Creation Error')
          }
          else {
            console.log('Portfolio Created!')
          }
        })
      })
  }

  valuesUpdated (e) {
    const name = this.refs.name.getValue()
    const { allowSubmit } = this.state
    if ((allowSubmit && !name) || (!allowSubmit && name)) {
      this.setState({allowSubmit: !!name})
    }
  }

  render () {
    const { allowSubmit } = this.state
    return (
      <Dialog
        title='Create Portfolio'
        onRequestClose={e => this.props.onCancel(e)}
        actions={([
          <RaisedButton
            label='Cancel'
            primary={!allowSubmit}
            onClick={e => this.props.onCancel(e)}
          />,
          <RaisedButton
            label='Submit'
            primary
            disabled={!allowSubmit}
            onClick={e => this.onSubmit(e)}
          />
        ])}
        open={this.props.isOpen}
      >
        <form onSubmit={e => this.onSubmit(e)}>
          <div>
            <TextField
              ref='name'
              floatingLabelText='Portfolio name'
              onChange={e => this.valuesUpdated()}
            />
          </div>
          <div>
            <TextField
              ref='description'
              multiLine
              floatingLabelText='Description'
              hintText='Give your portfolio a description'
            />
          </div>
        </form>
      </Dialog>
    )
  }
}

export default CreatePortfolioDialog

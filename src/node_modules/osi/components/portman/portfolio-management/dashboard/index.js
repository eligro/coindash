import React, { Component } from 'react'
import { connect } from 'react-redux'
import { bindActionCreators } from 'redux'

import * as portfolioActions from '../../../../../../actions/portfolio.actions'

import Paper from 'react-md/lib/Papers'
import Button from 'react-md/lib/Buttons/Button'

import Balances from './balance'
import Benchmark from './benchmark'

import './dashboard.css'

class Dashboard extends Component {
  constructor (props) {
    super(props)

    this.state = {}
  }

  componentDidMount () {
    const { calculations, portfolio, portfolioActions, process } = this.props
    if (portfolio && portfolio.portfolio && portfolio.portfolio.lastCalculated) {
      let shouldIupdate = (!process || !process.fetching) && // not fetching, and
        (!calculations || !calculations.chartData || !calculations.dayDataByDate) // doesn't have calculations

      shouldIupdate && portfolioActions.loadPortfolioCalculations(portfolio)
    }
  }
  render () {
    const { user, userPortfolios, calculations } = this.props
    const { name } = user.profile || {}
    return (
      <div className='dashboard md-text'>
        {!userPortfolios.length && <WelcomeBlock name={name} />}

        {/* Comment Legit */}

          <div className='stats'>
            <Balances />
            <Benchmark calculations={calculations} />

          </div>
          <div className='tickers'>
            Tickers...
          </div>
        {false && (<pre>
          {JSON.stringify(userPortfolios, 1, 1)}
        </pre>)}
      </div>
    )
  }
}

const WelcomeBlock = (props) => {
  const imgSrc = '/images/cryptos.png'
  return (
    <div>
      <h1>Welcome, {props.name}!</h1>
      <Paper className='welcome' zDepth={1}>
        <div className='pres'>
          <img src={imgSrc} role='presentation' />
        </div>
        <div className='details'>
          <h3>Get started with creating your first portfolio</h3>
          <p>
            Portfolios are your way to track the earnings and performance of your investments.
          </p>
          <p>
            Coindash portfolios support ETH and other ERC20 tokens. More to come soon...
          </p>
          <div className='actions'>
            <Button label='Create' primary raised />
          </div>
        </div>
      </Paper>
    </div>
  )
}




function mapStateToProps (state, ownProps) {
  const { portfolios, userPortfolios: userKeys } = state.portfolio
  const userPortfolios = portfolios.filter(pf => userKeys.indexOf(pf.portfolio.pid) !== -1)

  const pid = userKeys[0]
  const portfolio = portfolios.find(pf => pf.portfolio.pid === pid)

  const calculations = state.portfolio && state.portfolio.calculations ? state.portfolio.calculations[pid] : null
  const process = state.portfolio.process[pid]

  const { log = [] } = (process && process.started && process) || {}
  const progressLog = log.filter(l => l.type === 'PORTFOLIO_CALCULATION_UPDATE')
  const processProgress = progressLog && progressLog.length && progressLog[progressLog.length - 1].progress
  const calculationError = log.find(l => l.type === 'PORTFOLIO_CALCULATION_ERROR')

  return {
    user: state.user,
    userPortfolios,
    portfolios,
    portfolio,
    calculations,
    process,
    processProgress,
    calculationError
  }
}

function mapDispatchToProps (dispatch) {
  return {
    portfolioActions: bindActionCreators(portfolioActions, dispatch),
  }
}

export default connect(mapStateToProps, mapDispatchToProps)(Dashboard)

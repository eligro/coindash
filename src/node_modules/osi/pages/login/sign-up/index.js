import React, { Component } from 'react'
import { Link, browserHistory } from 'react-router'
import FontAwesome from 'react-fontawesome'
import { Button } from 'react-bootstrap'
import { NoAuthPage as Page, Card, Analytics } from 'osi/components'
import Spinner from 'osi/bits/spinner'
import Paper from 'osi/bits/paper'
import firebase from '../../../../../utils/database.react.js'
import TextField from 'material-ui/TextField'

class SignUpPage extends Component {
  constructor (props) {
    super(props)
    this.state = {
      waiting: false,
      inputs: {}
    }
  }

  valueChanged (inputName) {
    const input = this.state.inputs[inputName]
    return (event, value) => ((input && !value) || (!input && value)) &&
        this.setState({ inputs: { ...this.state.inputs, [inputName]: !!value } })
  }

  handleChanges (newValue) {
    this.setState(newValue)
  }

  onLogin () {
    browserHistory.push('/login')
  }

  handleSubmit (event) {
    const email = this.refs.email.getValue()
    const password = this.refs.password.getValue()

    event.preventDefault()
    Analytics.event({category: 'User', action: 'Registeration', label: 'activity', nonInteraction: false})
    this.setState({ waiting: true })

    firebase.auth().createUserWithEmailAndPassword(email, password)
      .catch(err => this.setState({ waiting: false, UserError: err }))
      .then(_ => this.setState({ waiting: false }))
      .then(_ => this.onLogin())
  }

  render () {
    return (
      <Page className={['login', 'reset-password', this.state.waiting && 'is-loading'].join(' ')}>
        <Paper zDepth={3} style={{borderRadius: '5px'}}>
          <Card className='reset-password login' headerActions={<Link to='/login'><FontAwesome name='times' /></Link>}>
            <div className='up'>
              <h3>Sign Up</h3>
                <form>
                  <TextField id='email'
                    ref='email'
                    type='text'
                    floatingLabelText='Email'
                    onChange={this.valueChanged('email')}
                    errorText={this.state.userError && this.state.userError.code && this.state.userError.code.match(/invalid-email|invalid-email/) && this.state.userError.message} />

                  <TextField id='password'
                    ref='password'
                    type='password'
                    floatingLabelText='Password'
                    onChange={this.valueChanged('password')}
                    errorText={this.state.userError && this.state.userError.code && this.state.userError.code.match(/password/) && this.state.userError.message} />
                  <Button type='submit' disabled={!this.state.inputs.email} onClick={this.handleSubmit.bind(this)} bsStyle='primary' block>Sign Up</Button>
                </form>
            </div>
            {this.state.waiting && <Spinner>Please stand by...</Spinner>}

          </Card>
        </Paper>
      </Page>

    )
  }
}

export default SignUpPage

import React, { Component } from 'react'
import PropTypes from 'prop-types'
import { connect } from 'react-redux'
import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'
import getMuiTheme from 'material-ui/styles/getMuiTheme'
import coindashBaseTheme from 'osi/themes/coindashBaseTheme'
import coindashDarkTheme from 'osi/themes/coindashDarkTheme'
// import darkBaseTheme from 'material-ui/styles/baseThemes/darkBaseTheme'
// import lightBaseTheme from 'material-ui/styles/baseThemes/lightBaseTheme'

import WebFontLoader from 'webfontloader'

const getTheme = (dark) => dark && false ? coindashDarkTheme : coindashBaseTheme

WebFontLoader.load({
  google: {
    families: ['Roboto:300,400,500,700', 'Material Icons']
  }
})

let intercomInitialized = false

class AppWrap extends Component {
  constructor (props) {
    super(props)

    if (!intercomInitialized) {
      window.Intercom('boot', {
        app_id: 'fc0dpr74'
      })
      intercomInitialized = true
    }
  }
  render () {
    const Children = props => this.props.children
    return (
      <MuiThemeProvider muiTheme={getMuiTheme(getTheme(this.props.darkTheme))}>
        <div className={['app-wrap', this.props.darkTheme ? 'dark-theme' : 'light-theme'].join(' ')}><Children /></div>
      </MuiThemeProvider>

    )
  }
  getChildContext () {
    return {
      muiTheme: getMuiTheme(getTheme(this.props.darkTheme))
    }
  }
}
AppWrap.childContextTypes = {
  muiTheme: PropTypes.object
}

function mapStateToProps (state, ownProps) {
  return {
    darkTheme: state.user.darkTheme
  }
}

function mapDispatchToProps (dispatch) {
  return {}
}

export default connect(mapStateToProps, mapDispatchToProps)(AppWrap)

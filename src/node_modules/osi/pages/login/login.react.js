import React, { Component } from 'react'
import { Link, browserHistory } from 'react-router'
import Trianglify from 'react-trianglify'
import FontAwesome from 'react-fontawesome'
import { FormGroup, ControlLabel, FormControl, HelpBlock, Button } from 'react-bootstrap'
import { debounce } from 'lodash'
import { Page, Card, Analytics } from 'osi/components'
import { Logo } from 'osi/bits'
import './login.css'
import packageJson from '../../../../../package.json'

function FieldGroup ({ id, label, help, className, ...props }) {
  return (
    <FormGroup controlId={id} className={className}>
      <ControlLabel>{label}</ControlLabel>
      <FormControl {...props} />
      {help && <HelpBlock>{help}</HelpBlock>}
    </FormGroup>
  )
}

class LoginPage extends Component {
  render () {
    let {width, height, seed} = this.state
    let key = `${width}-${height}-${seed}`
    return (
      <Page className='login'>
        <div className='tbg' key={key}>
          <Trianglify width={this.state.width} height={this.state.height} seed={this.state.seed} {...this.state.pattern} />
        </div>
        <div className='brand'>
          <Logo version={packageJson.version} />
        </div>
        <Card className='login' title='&nbsp;' headerActions={<Link to='/'><FontAwesome name='times' /></Link>}>
          <div className='user-image'>
            <FontAwesome name='user-circle-o' />
          </div>
          {this.signinButton('google', 'Google', {disabled: true})}
          {this.signinButton('facebook', 'Facebook', {disabled: true})}
          <span className='seperator'>Or</span>
          <div className='up'>
            <form onSubmit={() => this.handleContinue()}>
              <FieldGroup
                className={!!this.state.inputs.ident && 'has-value'}
                id='ident'
                type='text'
                label='Identifier'
                placeholder='Identifier'
                onChange={e => this.handleChange(e.target.value)}
              />
              {false && <FieldGroup
                id='password'
                type='password'
                label='Password'
                placeholder='Password'
              /> }
            </form>
            <Button disabled={!this.state.inputs.ident} onClick={() => this.handleContinue()} bsStyle='primary' block>Continue</Button>
          </div>

        </Card>
      </Page>

    )
  }
  signinButton (name, title, {disabled = false}) {
    return <Button className={`signin-with ${name}`} disabled={disabled} onClick={() => this.signinWith(name)} block><FontAwesome name={name} /> Sign in with {title}</Button>
  }
  signinWith (provider) {

  }
  constructor (props) {
    super(props)
    this.state = {
      inputs: {
        ident: '',
        password: '',
        member: false
      },
      seed: 'Coindash by Eli Sklar',
      width: window.innerWidth,
      height: window.innerHeigh,
      pattern: {
        variance: 25,
        cell_size: 50,
        x_colors: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],
        y_colors: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58']
      }
    }

    this.handleChange = debounce((newValue) => {
      this.handleChanges({inputs: {ident: newValue}})
    }, 180)
  }
  handleChanges (newValue) {
    this.setState(newValue)
  }

  handleContinue () {
    if (this.state.inputs.ident === 'charly') {
      Analytics.event({ category: 'User', action: 'Identify', label: this.state.inputs.ident, nonInteraction: false })
      browserHistory.push('/dashboard')
    }
  }
  componentDidMount () {
    this.updateWindowDimensions()
    window.addEventListener('resize', this.updateWindowDimensions.bind(this))
  }

  componentWillUnmount () {
    window.removeEventListener('resize', this.updateWindowDimensions.bind(this))
  }

  updateWindowDimensions () {
    this.setState({ width: window.innerWidth, height: window.innerHeight })
  }
}

export default LoginPage

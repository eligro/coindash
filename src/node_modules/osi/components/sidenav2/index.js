import React, { Component } from 'react'
import { Link } from 'react-router'
import { connect } from 'react-redux'
import SidenavItem from './sidenav-item.react'
import Paper from 'material-ui/Paper'
import PersonAdd from 'material-ui/svg-icons/social/person-add'
import ContentLink from 'material-ui/svg-icons/content/link'
import ContentCopy from 'material-ui/svg-icons/content/content-copy'
import Download from 'material-ui/svg-icons/file/file-download'
import Delete from 'material-ui/svg-icons/action/delete'

import Menu from 'react-md/lib/Menus/Menu'
import List from 'react-md/lib/Lists/List'
import ListItem from 'react-md/lib/Lists/ListItem'
import Divider from 'react-md/lib/Dividers'

import ActionHome from 'material-ui/svg-icons/action/home'
import ActionCardTravel from 'material-ui/svg-icons/action/card-travel'
import ActionDoneAll from 'material-ui/svg-icons/action/done-all'
import ActionLoyalty from 'material-ui/svg-icons/action/loyalty'
import MapsLocalOffer from 'material-ui/svg-icons/maps/local-offer'
import ActionSettingsApplications from 'material-ui/svg-icons/action/settings-applications'
import ActionSupervisorAccount from 'material-ui/svg-icons/action/supervisor-account'
import FileFolderShared from 'material-ui/svg-icons/file/folder-shared'
import Subheader from 'react-md/lib/Subheaders'

import './sidenav.css'

const navColors = {
  regular: 'rgba(0,0,0,0.54)',
  hover: 'rgba(0,0,0,0.84)'
}

const iconStyle = {
  width: 19,
  height: 19
}

const isActive = (path, to) => path === to

class SideNavigation extends Component {
  defaultProps () {
    return { items: [
            {title: 'dashboard', icon: 'tachometer'}
    ] }
  }

  render () {
    const disabled = true
    const menuItems = [
            {title: 'Dashboard', icon: <ActionHome style={iconStyle} />, route: '/dashboard'},
            {title: 'Portfolio', icon: <ActionCardTravel style={iconStyle} />, route: '/portfolios'},
            // {title: 'My Accounts', icon: 'cogs', route: '/dashboard/accounts', style: {paddingTop: '10px'}},
            // {title: 'My Tokens', icon: 'cubes', route: '/dashboard/tokens', style: {paddingTop: '10px'}},
            {title: 'Copy ICO', icon: <ActionDoneAll style={iconStyle} />, route: '/copyCrypto', style: { paddingTop: '11px' }, disabled},
            // {title: 'about', icon: 'university', route: '/about', style: { paddingTop: '8px' }, disabled}
            /* {title: 'about', icon: 'building-o', route: '/accounts', style: {paddingTop: '10px'}},
            {title: 'links', icon: 'link', route: '/accounts', style: {paddingTop: '11px'}} */
    ]

    const secondaryItems = [
      {title: 'Whitelist Coupon', icon: <MapsLocalOffer style={iconStyle} />, route: '/whitelist-coupon'}
      // {title: 'Portfolio', icon: <ActionCardTravel style={iconStyle} />, route: '/portfolios'}
    ]

    const adminItems = [
            // { title: 'Administration', icon: <ActionSettingsApplications style={iconStyle} />, route: '/admin' },
            { title: 'Users', icon: <ActionSupervisorAccount style={iconStyle} />, route: '/admin/users' },
            { title: 'Portfolios', icon: <FileFolderShared style={iconStyle} />, route: '/admin/portfolios' }
            // {title: 'Portfolio', icon: 'newspaper-o', route: '/portfolio', style: {paddingTop: '10px'}},
            // {title: 'My Accounts', icon: 'cogs', route: '/dashboard/accounts', style: {paddingTop: '10px'}},
            // {title: 'My Tokens', icon: 'cubes', route: '/dashboard/tokens', style: {paddingTop: '10px'}},
            // {title: 'Copy ICO', icon: 'newspaper-o', route: '/copyCrypto', style: { paddingTop: '11px' }, disabled},
            // {title: 'about', icon: 'university', route: '/about', style: { paddingTop: '8px' }, disabled}
            /* {title: 'about', icon: 'building-o', route: '/accounts', style: {paddingTop: '10px'}},
            {title: 'links', icon: 'link', route: '/accounts', style: {paddingTop: '11px'}} */
    ]
    return (
      <Paper zDepth={1} className='sidenav' style={{borderRadius: 0}}>

        <List className='main'>
          {menuItems
            .map(m => Object.assign(m, { active: isActive(m.route, this.props.currentPathname) }))
            .map((m, i) =>
              <ListItem
                key={i}
                className={m.active ? 'active' : null}
                activeClassName='active'
                active={m.active}
                to={m.route}
                primaryText={m.title}
                leftIcon={m.icon}
                disabled={m.disabled}
                component={Link} />
          )}
        </List>

        <div className='spacer' />

        <List className='secondary'>
          {secondaryItems
            .map(m => Object.assign(m, { active: isActive(m.route, this.props.currentPathname) }))
            .map((m, i) =>
              <ListItem
                key={i}
                className={m.active ? 'active' : null}
                activeClassName='active'
                active={m.active}
                to={m.route}
                primaryText={m.title}
                leftIcon={m.icon}
                disabled={m.disabled}
                component={Link} />
          )}
        </List>

        {this.props.isAdmin && (
          <List className='admin'>
            <Subheader primaryText='Administration' />
            {adminItems
                .map(m => Object.assign(m, { active: isActive(m.route, this.props.currentPathname) }))
                .map((m, i) =>
                  <ListItem
                    key={i}
                    className={m.active ? 'active' : null}
                    activeClassName='active'
                    active={m.active}
                    to={m.route}
                    primaryText={m.title}
                    leftIcon={m.icon}
                    disabled={m.disabled}
                    component={Link} />
              )}

          </List>
        )}
      </Paper>
    )
  }
}

function mapStateToProps (state, ownProps) {
  return {
    user: state.user,
    isAdmin: state.admin.active,
    portfolios: state.portfolio
  }
}

function mapDispatchToProps (dispatch) {
  return {
  }
}
export default connect(mapStateToProps, mapDispatchToProps)(SideNavigation)

import React, { Component } from 'react'
import { Link, browserHistory } from 'react-router'
import FontAwesome from 'react-fontawesome'
import { Button } from 'react-bootstrap'
import { NoAuthPage as Page, Card, Analytics } from 'osi/components'
import Spinner from 'osi/bits/spinner'
import firebase from '../../../../../utils/database.react.js'
import TextField from 'material-ui/TextField'


import '../login.css'
import packageJson from '../../../../../../package.json'
import Paper from 'react-md/lib/Papers/Paper'
import { Icon } from 'osi/bits'
import RaisedButton from 'material-ui/RaisedButton'
import Divider from 'material-ui/Divider';

import {Tabs, Tab} from 'material-ui/Tabs'

import Logotype from 'osi/bits/coindash-type'

class ResetPasswordPage extends Component {
  constructor (props) {
    super(props)
    this.state = {
      waiting: false,
      done: false,
      inputs: {}
    }
    this.handleSubmit = this.handleSubmit.bind(this)
    this.onKeyPress = this.onKeyPress.bind(this)
  }

  valueChanged (inputName) {
    const input = this.state.inputs[inputName]
    return (event, value) => ((input && !value) || (!input && value)) &&
        this.setState({ inputs: { ...this.state.inputs, [inputName]: !!value } })
  }

  onKeyPress(event) {
    if (event.charCode === 13) {
      event.preventDefault();

      const email = event.target.value
      Analytics.event({category: 'User', action: 'Reset Password', label: 'activity', nonInteraction: false})
      this.setState({ waiting: true })

      firebase.auth().sendPasswordResetEmail(email)
        .then(na => this.setState({ waiting: false, done: true }))
        .catch(err => this.setState({ waiting: false, error: err }))
    } 
  }

  handleChanges (newValue) {
    this.setState(newValue)
  }

  handleSubmit (event) {
    const email = this.refs.email.getValue()
    event.preventDefault()

    Analytics.event({category: 'User', action: 'Reset Password', label: 'activity', nonInteraction: false})
    this.setState({ waiting: true })

    firebase.auth().sendPasswordResetEmail(email)
      .then(na => this.setState({ waiting: false, done: true }))
      .catch(err => this.setState({ waiting: false, error: err }))
  }

  render () {
    return (

      <Page className='login x2'>
        <div className='j'>
          <Paper zDepth={4} className='coindash'>
            <div className='version'>
              {packageJson.version}
            </div>
            <div className='logo'>
              <Icon className='coindash-icon' />
              <Logotype />
            </div>
            <div className='texts'>
              <p>Get insight about your crypto portfolio. Benchmark it against the market and other traders. Follow the best performing investors and invest exactly like them with the copy trade feature. Discover new opportunities, and new tools: ICO Dashboard, Automation investment and more...</p>
            </div>
            <div className='feedbacks'>
              <h5>Share your feedback with us</h5>
              <p><a href='mailto:contact@coindash.io'>contact@coindash.io</a></p>
            </div>
          </Paper>
          <Paper zDepth={3} className='form'>
            <div className='password-reset'>
              <Tab label='Password Reset' />
              <Divider />
              {!this.state.done && (
                <form>
                  <TextField
                    fullWidth
                    id='email'
                    ref='email'
                    type='text'
                    floatingLabelText='Email'
                    onKeyPress={this.onKeyPress}
                    onChange={this.valueChanged('email')}
                    errorText={this.state.userError && this.state.userError.code && this.state.userError.code.match(/invalid-email|invalid-email/) && this.state.userError.message} />

                  <div className='btns'>
                    <RaisedButton
                      fullWidth={true}
                      label='Continue'
                      backgroundColor='#4845d3'
                      labelColor='#fff'
                      disabled={!this.state.inputs.email}
                      onTouchTap={e => {this.handleSubmit(e)}} />
                  </div>
                </form>
              )}
              <div className='actions'>
                <Link to='/login'>Back to login</Link>
              </div>
              {this.state.done && (
                <div className='done'>
                  <h2>Link Sent!</h2>
                  <p>
                    Please check your inbox for a password reset email from Coindash (contact@coindash.io) for a link to reset your password.
                  </p>
                  <p>
                    Once you've completed the reset password step you can <Link to='/login'>go back to the login page</Link> and sign in with your email address and the newly set password.
                  </p>
                  <Button onClick={() => browserHistory.push('/login')} bsStyle='primary' block>Continue</Button>
                </div>
              )}
            </div>
            {this.state.waiting && <Spinner>Please stand by...</Spinner>}
          </Paper>
        </div>
      </Page>
    )
  }
}

export default ResetPasswordPage

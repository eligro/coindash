import React, { Component } from 'react'

import Paper from 'react-md/lib/Papers'
import { Tabs, Tab } from 'material-ui/Tabs'

import ActionTrendingUp from 'material-ui/svg-icons/action/trending-up'
import EditorPieChart from 'material-ui/svg-icons/editor/pie-chart'

import PerformanceChart from 'osi/components/portman/parts/charts/performance'

const TabIcons = {
  performance: props => <ActionTrendingUp {...props} />,
  allocation: props => <EditorPieChart {...props} />

}

const TabName = ({icon, ...props}) => {
  const TabIcon = TabIcons[icon]

  return (
    <div className='tab-name'>
      <TabIcon style={{width: 15}} />
      <span>{props.children}</span>
    </div>
  )
}

class Benchmark extends Component {
  constructor (props) {
    super(props)

    this.state = {
      activeTab: 'b'
    }
  }
  handleChange (...args) {
    console.info('changed', args)
  }

  render () {
    return (
      <Paper className='benchmark-card'>
        <h4>Benchmark</h4>

        <Tabs
          className='tabs'
          value={this.props.activeTab}
          onChange={this.props.handleChange}
        >
          <Tab label={(<TabName icon='performance'>Performance</TabName>)} value='a'>
            {this.props.calculations && (
              <PerformanceChart calculations={this.props.calculations} />
            )}
          </Tab>
          <Tab label={<TabName icon='allocation'>Allocation</TabName>} value='b'>
            <div>
              <h2>Controllable Tab B</h2>
              <p>
                This is another example of a controllable tab. Remember, if you
                use controllable Tabs, you need to give all of your tabs values or else
                you wont be able to select them.
              </p>
            </div>
          </Tab>
        </Tabs>
      </Paper>
    )
  }
}

export default Benchmark

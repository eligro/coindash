import React, { Component } from 'react'
import Paper from 'react-md/lib/Papers'
import { Link } from 'react-router'
import { ToolbarGroup, Toolbar, ToolbarTitle, IconButton } from 'material-ui'
import NavigationMoreVert from 'material-ui/svg-icons/navigation/more-vert'
import NavigationArrowBack from 'material-ui/svg-icons/navigation/arrow-back'
import PortfolioAvatar from 'osi/bits/portfolio-avatar'
import SocialShare from 'material-ui/svg-icons/social/share'
import ActionDelete from 'material-ui/svg-icons/action/delete'
import IconMenu from 'material-ui/IconMenu'
import MenuItem from 'material-ui/MenuItem'
import NavigationRefresh from 'material-ui/svg-icons/navigation/refresh'
import ActionFavorite from 'material-ui/svg-icons/action/favorite'
import ActionSearch from 'material-ui/svg-icons/action/search'

class PortfolioHead extends Component {
  constructor (props) {
    super(props)

    this.state = {
      value: 3
    }
  }

  handleChange (event, index, value) {
    this.setState({value})
  }

  render () {
    const { portfolio, isSingular } = this.props
    const alignToStart = { alignItems: 'flex-start' }
    const whiteIcon = { color: '#FFF' }
    return (
      <Paper zDepth={1} className='portfolio-head'>
        <Toolbar className='one' style={{
          background: 'rgba(52, 84, 209, 1)'
        }}>

          {!isSingular && (
            <ToolbarGroup className='back' style={alignToStart}>
              <Link to='/portfolios'>
                <IconButton touch style={whiteIcon}>
                  <NavigationArrowBack color='#FFF' />
                </IconButton>
              </Link>
            </ToolbarGroup>
          )}

          <ToolbarGroup style={alignToStart} className='actions' lastChild>
            <IconButton tooltip='Search Portfolio' disabled>
              <ActionSearch color='#FFF' />
            </IconButton>

            <IconButton tooltip='Share Portfolio' disabled>
              <SocialShare color='#FFF' />
            </IconButton>

            <IconButton tooltip='Recalculate Portfolio' onClick={e => this.props.doCalculate()}>
              <NavigationRefresh color='#FFF' />
            </IconButton>

            <IconButton disabled tooltip='Add to Favorites'>
              <ActionFavorite color='#FFF' />
            </IconButton>
            <IconButton disabled tooltip='Delete Portfolio'>
              <ActionDelete color='#FFF' />
            </IconButton>
            <IconButton disabled tooltip='Portfolio Settings'>
              <NavigationMoreVert color='#FFF' />
            </IconButton>
            {'icon menu for later' === 'not now' && (
              <IconMenu
                iconButtonElement={
                  <IconButton touch style={whiteIcon}>
                    <NavigationMoreVert color='#FFF' />
                  </IconButton>
                  }
                >
                <MenuItem primaryText='Download' />
                <MenuItem primaryText='More Info' />
              </IconMenu>
            )}
          </ToolbarGroup>
        </Toolbar>

        <Toolbar className='two' style={{
          background: 'rgba(52, 84, 209, 1)'
        }}>
          <ToolbarGroup className='titles' style={alignToStart}>
            <PortfolioAvatar portfolio={portfolio} />
            <ToolbarTitle text={portfolio.portfolio.name} className='title' style={whiteIcon} />
          </ToolbarGroup>
        </Toolbar>
      </Paper>
    )
  }
}

export default PortfolioHead

import React, { Component } from 'react'
import { connect } from 'react-redux'
import { Link, browserHistory } from 'react-router'
import FontAwesome from 'react-fontawesome'
import { Button } from 'react-bootstrap'
import { NoAuthPage as Page, Card, Analytics } from 'osi/components'
import Spinner from 'osi/bits/spinner'
import Paper from 'osi/bits/paper'
import firebase from '../../../../../utils/database.react.js'
import TextField from 'material-ui/TextField'

class ResetPasswordPage extends Component {
  constructor (props) {
    super(props)
    this.state = {
      waiting: false,
      done: false,
      inputs: {}
    }
  }

  valueChanged (inputName) {
    const input = this.state.inputs[inputName]
    return (event, value) => ((input && !value) || (!input && value)) &&
        this.setState({ inputs: { ...this.state.inputs, [inputName]: !!value } })
  }

  handleChanges (newValue) {
    this.setState(newValue)
  }

  handleSubmit (event) {
    const email = this.refs.email.getValue()

    event.preventDefault()
    Analytics.event({category: 'User', action: 'Reset Password', label: 'activity', nonInteraction: false})
    this.setState({ waiting: true })

    firebase.auth().sendPasswordResetEmail(email)
      .then(na => this.setState({ waiting: false, done: true }))
      .catch(err => this.setState({ waiting: false, error: err }))
  }

  render () {
    const { user } = this.props
    const { email } = user || user.profile
    const name = user.name || user.profile.name || user.profile.provider[0].name || user.email
    return (
      <Page className={['login', 'reset-password', this.state.waiting && 'is-loading'].join(' ')}>
        <Paper zDepth={3} style={{borderRadius: '5px'}}>
          <Card className='reset-password login' headerActions={<Link to='/'><FontAwesome name='times' /></Link>}>
            <div className='up'>
              <h3>Inactive Account</h3>
              <div className='done'>
                <p>
                  Hello {name},
                </p>
                <p>
                  We appreciate your interest in Coindash but unfurtunatelly we're in early beta stage. If you'de lik to participate in our beta testing please contact us via slack.
                </p>
                <p>
                  Your email as it is registered in our system is <code>{email}</code>.
                </p>
              </div>
            </div>
            {this.state.waiting && <Spinner>Please stand by...</Spinner>}

          </Card>
        </Paper>
      </Page>

    )
  }
}

function mapStateToProps (state, ownProps) {
  return {
    user: state.user
  }
}

function mapDispatchToProps (dispatch) {
  return {}
}

export default connect(mapStateToProps, mapDispatchToProps)(ResetPasswordPage)

import React, { Component, PureComponent } from 'react'
import { connect } from 'react-redux'

import { bindActionCreators } from 'redux'

import * as userActions from '../../../../../../actions/user.actions'
import * as portfolioActions from '../../../../../../actions/portfolio.actions'

import { Avatar, ToolbarGroup, Toolbar, ToolbarTitle, IconButton } from 'material-ui'
import { Spinner } from 'osi/bits'

import NavigationMoreVert from 'material-ui/svg-icons/navigation/more-vert'
import EditorModeEdit from 'material-ui/svg-icons/editor/mode-edit'

import './portfolio.css'
import WebFont from 'webfontloader'
import Button from 'react-md/lib/Buttons/Button'
import Card from 'react-md/lib/Cards/Card'
import CardTitle from 'react-md/lib/Cards/CardTitle'
import CardText from 'react-md/lib/Cards/CardText'
import CardActions from 'react-md/lib/Cards/CardActions'
import List from 'react-md/lib/Lists/List'
import ListItem from 'react-md/lib/Lists/ListItem'
import FontIcon from 'react-md/lib/FontIcons'

const FlatButtonExamples = () => (
  <div className='btn-example'>
    <h5>Theme Examples</h5>
    <Button flat label='Hello, World!' />
    <Button flat primary label='Chat'>chat_bubble_outline</Button>
    <Button flat secondary iconBefore={false} label='Chat'>chat_bubble_outline</Button>
    <h5>Disabled Examples</h5>
    <Button flat disabled label='Disabled Button' />
    <Button flat disabled label='Disabled Button'>close</Button>
  </div>
)

class Portfolio extends Component {
  componentDidMount () {

  }
  render () {
    const { pid } = this.props.routeParams
    const { portfolio } = this.props
    if (!portfolio || !portfolio.portfolio) return <Spinner>Loading...</Spinner>
    return (
      <div className={['portfolio', pid].join(' ')}>
        <div className='titles'>
          <Avatar className='avatar' style={{
            width: 48,
            height: 48
          }}>{portfolio.portfolio.name.split(' ').filter((e, i) => i < 2).map(c => c[0]).join('').toUpperCase()}</Avatar>
          <h2>{portfolio.portfolio.name}</h2>
          <span style={{flex: '1 1 auto'}} />

          <IconButton
            iconStyle={{}}
            style={{}}
          >
            <EditorModeEdit />
          </IconButton>

          <IconButton
            iconStyle={{}}
            style={{}}
          >
            <NavigationMoreVert />
          </IconButton>

        </div>

        <div className='indicators'>
          <FlatButtonExamples />
        </div>
        <div>
          <CardWeather />
        </div>
        Hello portfolio <code>{pid}</code>!
        <pre>{JSON.stringify(portfolio, 1, 1)}</pre>
      </div>
    )
  }
}

const degree = '\u00B0'
WebFont.load({
  custom: {
    families: ['WeatherIcons'],
    urls: ['https://cdnjs.cloudflare.com/ajax/libs/weather-icons/2.0.9/css/weather-icons.min.css']
  }
})

function makeIcon (min, max, sunny = true) {
  return [
    <FontIcon
      key='icon'
      iconClassName={`wi wi-day-${sunny ? 'sunny' : 'cloudy'}`}
      className='icon-yellow'
      style={{ marginRight: 24 }}
    />,
    <span key='max' className='md-color--text'>{`${max}${degree}`}</span>,
    '/',
    <span key='min' className='md-color--secondary-text'>{`${min}${degree}`}</span>
  ]
}

const tuesday = makeIcon(12, 24)
const wednesday = makeIcon(14, 22)
const thursday = makeIcon(15, 25, false)

class CardWeather extends Component {
  render () {
    return (
      <Card className='indicator-card'>
        <CardTitle title='Associated Accounts' subtitle='' />
        <CardText className='weather-block'>
          <h2 className='md-display-4 display-override'>23</h2>
        </CardText>
        <List>
          <ListItem
            leftIcon={<FontIcon iconClassName='wi wi-strong-wind' />}
            primaryText='23 km/h'
          />
          <ListItem
            leftIcon={<FontIcon iconClassName='wi wi-rain' />}
            primaryText='48%'
          />
        </List>
        <List ordered className='weather-list'>
          <ListItem primaryText='Tuesday' rightIcon={tuesday} />
          <ListItem primaryText='Wednesday' rightIcon={wednesday} />
          <ListItem primaryText='Thursday' rightIcon={thursday} />
        </List>
        <CardActions className='md-divider-border md-divider-border--top'>
          <Button flat label='Full Report' secondary />
        </CardActions>
      </Card>
    )
  }
}

function mapStateToProps (state, ownProps) {
  const { pid } = ownProps.routeParams
  const { portfolios = [] } = state.portfolio
  return {
    user: state.user,
    portfolio: portfolios.find(e => e.portfolio.pid === pid)
  }
}

function mapDispatchToProps (dispatch) {
  return {
    userActions: bindActionCreators(userActions, dispatch),
    portfolioActions: bindActionCreators(portfolioActions, dispatch)
  }
}

export default connect(mapStateToProps, mapDispatchToProps)(Portfolio)

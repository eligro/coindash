import React, { Component } from 'react'
import { Link, browserHistory } from 'react-router'
import FontAwesome from 'react-fontawesome'
import { Button } from 'react-bootstrap'
import { NoAuthPage as Page, Card, Analytics } from 'osi/components'
import Spinner from 'osi/bits/spinner'
import Paper from 'osi/bits/paper'
import firebase from '../../../../../utils/database.react.js'

import { FieldGroup } from '../login.react'

class ResetPasswordPage extends Component {
  constructor (props) {
    super(props)
    this.state = {
      waiting: false,
      done: false,
      inputs: {}
    }
  }

  handleChanges (newValue) {
    this.setState(newValue)
  }

  handleReset (event) {
    event.preventDefault()
    Analytics.event({category: 'User', action: 'Reset Password', label: 'activity', nonInteraction: false})
    this.setState({ waiting: true })

    firebase.auth().sendPasswordResetEmail(this.state.inputs.email)
      .then(na => this.setState({ waiting: false, done: true }))
      .catch(err => this.setState({ waiting: false, error: err }))
  }

  render () {
    return (
      <Page className={['login', 'reset-password', this.state.waiting && 'is-loading'].join(' ')}>
        <Paper zDepth={3} style={{borderRadius: '5px'}}>
          <Card className='reset-password login' title='Reset Password' headerActions={<Link to='/login'><FontAwesome name='times' /></Link>}>
            <div className='up'>
              {!this.state.done && (
                <form>
                  <FieldGroup className={!!this.state.inputs.email && 'has-value'}
                    type='text'
                    label='Email'
                    placeholder='Email'
                    error={this.state.userError && this.state.userError.code && this.state.userError.code.match(/email/) && this.state.userError.message}
                    onChange={e => this.setState({
                      inputs: { ...this.state.inputs, email: e.target.value }
                    })} />
                  <Button type='submit' disabled={!this.state.inputs.email} onClick={this.handleReset.bind(this)} bsStyle='primary' block>Continue</Button>
                </form>
              )}
              {this.state.done && (
                <div className='done'>
                  <h2>Link Sent!</h2>
                  <p>
                    Please check your inbox for a password reset email from Coindash (contact@coindash.io) for a link to reset your password.
                  </p>
                  <p>
                    Once you've completed the reset password step you can <Link to='/login'>go back to the login page</Link> and sign in with your email address and the newly set password.
                  </p>
                  <Button onClick={() => browserHistory.push('/login')} bsStyle='primary' block>Continue</Button>
                </div>
              )}
            </div>
            {this.state.waiting && <Spinner>Please stand by...</Spinner>}

          </Card>
        </Paper>
      </Page>

    )
  }
}

export default ResetPasswordPage
